{"version":3,"sources":["components/Title/Title.js","typedefs/titleType.js","components/Header/Header.js","typedefs/methodsType.js","components/ToDoItem/ToDoItem.js","typedefs/todoType.js","components/ToDoList/ToDoList.js","components/Main/Main.js","constants.js","typedefs/footerType.js","typedefs/filterListType.js","components/FilterList/FilterList.js","components/Footer/Footer.js","containers/ToDoContainer/ToDoContainer.js","App.js","index.js"],"names":["Title","PropTypes","string","title","className","defaultProps","Header","func","state","setTitle","target","value","slice","setState","validateForm","event","preventDefault","addTodo","props","trimStr","trim","id","Date","completed","isEditable","render","onSubmit","placeholder","type","onChange","onBlur","Component","ToDoItem","shape","number","bool","editValue","setEditValue","onToggle","onDelete","onEdit","handleKeyPress","setEditedValue","cn","editing","checked","htmlFor","onDoubleClick","onClick","defaultValue","autoFocus","onKeyDown","ToDoList","visibleTodos","map","todo","key","Main","todos","onToggleTodoCompleted","onDeleteCurrentTodo","onToggleAllCompleted","onEditCurrentTodo","isAllCompleted","every","FILTER_TYPES","all","active","FilterList","onSetFilter","selectedFilter","Object","values","filter","href","selected","Footer","currentFilter","onClearCompleted","completedTodos","length","some","ToDoContainer","JSON","parse","localStorage","getItem","deleteTodo","todoId","handleClearCompleted","toggleTodoCompleted","toggleAllCompleted","setFilter","filterTodos","setEditableState","setItem","stringify","this","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.99f1c258.chunk.js","sourcesContent":["import React from 'react';\nimport { titleType } from '../../typedefs/titleType';\nimport './Title.scss';\n\nexport const Title = ({ title }) => <h1 className=\"title\">{title}</h1>;\n\nTitle.defaultProps = {\n  title: 'Simple title',\n};\n\nTitle.propTypes = titleType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const titleType = PropTypes.string;\n","import React, { Component } from 'react';\nimport { headerType } from '../../typedefs/headerType';\nimport './Header.scss';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  };\n\n  setTitle = ({ target }) => {\n    const title = target.value.slice(0, 30);\n\n    this.setState({ title });\n  };\n\n  validateForm = (event) => {\n    event.preventDefault();\n    const { addTodo } = this.props;\n    const trimStr = this.state.title.trim();\n\n    if (trimStr === '') {\n      return;\n    }\n\n    addTodo({\n      id: +new Date(),\n      title: trimStr,\n      completed: false,\n      isEditable: false,\n    });\n\n    this.setState({ title: '' });\n  };\n\n  render = () => {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n\n        <form onSubmit={this.validateForm}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"Click to add task\"\n            type=\"text\"\n            onChange={this.setTitle}\n            onBlur={this.validateForm}\n            value={title}\n          />\n        </form>\n      </header>\n    );\n  };\n}\n\nHeader.propTypes = headerType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const addTodoType = PropTypes.func;\n\nexport const onDeleteType = PropTypes.func;\nexport const onToggleTodoType = PropTypes.func;\nexport const onToggleAllType = PropTypes.func;\nexport const onEditType = PropTypes.func;\nexport const handleKeyPressType = PropTypes.func;\nexport const setEditedValueType = PropTypes.func;\n\nexport const onClearCompletedType = PropTypes.func;\nexport const onSetFilterType = PropTypes.func;\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport { todoItemType } from '../../typedefs/todoItemType';\nimport './ToDoItem.scss';\n\n/* eslint-disable jsx-a11y/no-autofocus */\nexport class ToDoItem extends Component {\n  state = { editValue: '' }\n\n  setEditValue = ({ target: { value } }) => {\n    this.setState({ editValue: value });\n  }\n\n  render = () => {\n    const {\n      id,\n      title,\n      completed,\n      isEditable,\n      onToggle,\n      onDelete,\n      onEdit,\n      handleKeyPress,\n      setEditedValue,\n    } = this.props;\n    const { editValue } = this.state;\n\n    return (\n      <li className={cn('todo-item', {\n        completed,\n        editing: isEditable,\n      })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={onToggle}\n            checked={completed}\n          />\n\n          <label\n            className={cn('todo-label', { checked: completed })}\n            htmlFor={`todo-${id}`}\n            onDoubleClick={onEdit}\n          >\n            {title}\n          </label>\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={onDelete}\n          />\n        </div>\n\n        {isEditable && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            defaultValue={title}\n            autoFocus\n            onChange={this.setEditValue}\n            onKeyDown={event => handleKeyPress(event, id, editValue)}\n            onBlur={event => setEditedValue(event, id, editValue)}\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nToDoItem.propTypes = todoItemType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const todoType = PropTypes.shape({\n  id: PropTypes.number,\n  completed: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  title: PropTypes.string,\n});\n","import React from 'react';\nimport { todoListType } from '../../typedefs/todoListType';\nimport { ToDoItem } from '../ToDoItem';\nimport './ToDoList.scss';\n\nexport const ToDoList = ({\n  visibleTodos,\n  onToggle,\n  onDelete,\n  onEdit,\n  handleKeyPress,\n  setEditedValue,\n}) => (\n  <ul className=\"todo-list\">\n    {visibleTodos.map(todo => (\n      <ToDoItem\n        key={todo.id}\n        {...todo}\n        onToggle={() => onToggle(todo.id)}\n        onDelete={() => onDelete(todo.id)}\n        onEdit={() => onEdit(todo.id)}\n        handleKeyPress={handleKeyPress}\n        setEditedValue={setEditedValue}\n      />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = todoListType.isRequired;\n","import React from 'react';\nimport cn from 'classnames';\nimport { mainType } from '../../typedefs/mainType';\nimport { ToDoList } from '../ToDoList';\nimport './Main.scss';\n\nexport const Main = ({\n  todos,\n  visibleTodos,\n  onToggleTodoCompleted,\n  onDeleteCurrentTodo,\n  onToggleAllCompleted,\n  onEditCurrentTodo,\n  handleKeyPress,\n  setEditedValue,\n}) => {\n  const isAllCompleted = todos.every(todo => todo.completed);\n\n  return (\n    <section className=\"main\">\n      <label\n        className={cn('label', { 'label-checked-all': isAllCompleted })}\n        htmlFor=\"toggle-all\"\n      >\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={onToggleAllCompleted}\n          checked={isAllCompleted}\n        />\n        Mark all as complete\n      </label>\n\n      <ToDoList\n        visibleTodos={visibleTodos}\n        onToggle={onToggleTodoCompleted}\n        onDelete={onDeleteCurrentTodo}\n        onEdit={onEditCurrentTodo}\n        handleKeyPress={handleKeyPress}\n        setEditedValue={setEditedValue}\n      />\n    </section>\n  );\n};\n\nMain.propTypes = mainType.isRequired;\n","export const FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n","import PropTypes from 'prop-types';\nimport { todoType } from './todoType';\nimport { onClearCompletedType, onSetFilterType } from './methodsType';\n\nexport const footerType = {\n  todos: todoType,\n  currentFilter: PropTypes.string,\n  onClearCompleted: onClearCompletedType,\n  onSetFilter: onSetFilterType,\n};\n","import PropTypes from 'prop-types';\nimport { onSetFilterType } from './methodsType';\n\nexport const filterListType = {\n  selectedFilter: PropTypes.string,\n  onSetFilter: onSetFilterType,\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { filterListType } from '../../typedefs/filterListType';\nimport { FILTER_TYPES } from '../../constants';\nimport './FilterList.scss';\n\nexport const FilterList = ({ onSetFilter, selectedFilter }) => (\n  <ul className=\"filters\">\n    {Object.values(FILTER_TYPES).map(filter => (\n      <li key={filter} className=\"filter\">\n        <a\n          href={`#/${filter}`}\n          className={cn('filter-link', {\n            selected: selectedFilter === filter,\n          })}\n          onClick={() => onSetFilter(filter)}\n        >\n          {filter}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nFilterList.propTypes = filterListType.isRequired;\n","import React from 'react';\nimport { footerType } from '../../typedefs/footerType';\nimport { FilterList } from '../FilterList';\nimport './Footer.scss';\n\nexport const Footer = (\n  { currentFilter, todos, onClearCompleted, onSetFilter },\n) => {\n  const completedTodos = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${completedTodos} items left`}\n      </span>\n\n      <FilterList\n        onSetFilter={onSetFilter}\n        selectedFilter={currentFilter}\n      />\n\n      {todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = footerType.isRequired;\n","import React, { Component } from 'react';\nimport { Header } from '../../components/Header';\nimport { Main } from '../../components/Main';\nimport { Footer } from '../../components/Footer';\nimport { FILTER_TYPES } from '../../constants';\nimport './ToDoContainer.scss';\n\nexport class ToDoContainer extends Component {\n  state = {\n    todos: JSON.parse(localStorage.getItem('todos')) || [],\n    selectedFilter: FILTER_TYPES.all,\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  addTodo = todo => this.setState(state => ({\n    todos: [...state.todos, todo],\n  }));\n\n  deleteTodo = todoId => this.setState(state => ({\n    todos: state.todos.filter(({ id }) => id !== todoId),\n  }));\n\n  handleClearCompleted = () => this.setState(state => ({\n    todos: state.todos.filter(({ completed }) => !completed),\n  }));\n\n  toggleTodoCompleted = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  toggleAllCompleted = () => {\n    this.setState((state) => {\n      if (state.todos.every(todo => todo.completed)) {\n        return {\n          todos: state.todos.map(todo => ({\n            ...todo,\n            completed: false,\n          })),\n        };\n      }\n\n      return {\n        todos: state.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  setFilter = filter => this.setState({ selectedFilter: filter });\n\n  filterTodos = () => {\n    const { selectedFilter, todos } = this.state;\n\n    switch (selectedFilter) {\n      case FILTER_TYPES.active:\n        return todos.filter(({ completed }) => !completed);\n      case FILTER_TYPES.completed:\n        return todos.filter(({ completed }) => completed);\n      case FILTER_TYPES.all:\n        return todos.filter(({ id }) => id);\n      default:\n        return todos;\n    }\n  };\n\n  setEditableState = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== id) {\n          return {\n            ...todo,\n            isEditable: false,\n          };\n        }\n\n        return {\n          ...todo,\n          isEditable: true,\n        };\n      }),\n    }));\n  };\n\n  handleKeyPress = (event, id, value) => {\n    if (event.key === 'Escape') {\n      this.setState(state => ({\n        todos: state.todos.map(todo => ({\n          ...todo,\n          isEditable: false,\n        })),\n      }));\n    }\n\n    if (event.key === 'Enter') {\n      this.setEditedValue(event, id, value);\n    }\n  }\n\n  setEditedValue = (event, id, value) => {\n    if (!event.target.value.trim()) {\n      this.deleteTodo(id);\n    }\n\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: value || todo.title,\n          isEditable: false,\n        };\n      }),\n    }));\n  };\n\n  render = () => {\n    const { todos, selectedFilter } = this.state;\n    const visibleTodos = this.filterTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          addTodo={this.addTodo}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <Main\n              {...{ todos }}\n              visibleTodos={visibleTodos}\n              onToggleAllCompleted={this.toggleAllCompleted}\n              onToggleTodoCompleted={this.toggleTodoCompleted}\n              onDeleteCurrentTodo={this.deleteTodo}\n              onEditCurrentTodo={this.setEditableState}\n              handleKeyPress={this.handleKeyPress}\n              setEditedValue={this.setEditedValue}\n            />\n\n            <Footer\n              {...{ todos }}\n              onSetFilter={this.setFilter}\n              currentFilter={selectedFilter}\n              onClearCompleted={this.handleClearCompleted}\n            />\n          </>\n        )}\n\n      </section>\n    );\n  };\n}\n","import React from 'react';\nimport { Title } from './components/Title';\nimport { ToDoContainer } from './containers/ToDoContainer';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <Title title=\"Todo App\" />\n      <ToDoContainer />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}