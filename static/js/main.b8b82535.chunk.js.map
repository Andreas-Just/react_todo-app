{"version":3,"sources":["components/Title/Title.js","typedefs/titleType.js","components/Header/Header.js","typedefs/methodsType.js","components/ToDoItem/ToDoItem.js","typedefs/todoType.js","components/ToDoList/ToDoList.js","components/Main/Main.js","constants.js","typedefs/footerType.js","typedefs/filterListType.js","components/FilterList/FilterList.js","components/Footer/Footer.js","containers/ToDoContainer/ToDoContainer.js","App.js","index.js"],"names":["Title","PropTypes","string","title","className","defaultProps","Header","func","state","setTitle","target","value","slice","setState","validateForm","event","preventDefault","addTodo","props","trim","id","Date","completed","isEditable","render","onSubmit","placeholder","type","onChange","onBlur","Component","ToDoItem","shape","number","bool","editValue","setEditValue","todo","onToggle","onDelete","onEdit","handleKeyPress","setEditedValue","cn","editing","checked","htmlFor","onDoubleClick","onClick","defaultValue","autoFocus","onKeyDown","ToDoList","visibleTodos","map","key","Main","todos","onToggleTodoCompleted","onDeleteCurrentTodo","onToggleAllCompleted","onEditCurrentTodo","isAllCompleted","every","FILTER_TYPES","all","active","FilterList","onSetFilter","selectedFilter","Object","values","filter","href","selected","Footer","currentFilter","onClearCompleted","completedTodos","length","some","ToDoContainer","JSON","parse","localStorage","getItem","deleteTodo","todoId","handleClearCompleted","toggleTodoCompleted","toggleAllCompleted","setFilter","filterTodos","setEditableState","prevState","setItem","stringify","this","App","ReactDOM","document","getElementById"],"mappings":"maAIaA,GCFYC,IAAUC,O,MDEd,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,wBAAIC,UAAU,SAASD,KAE3DH,EAAMK,aAAe,CACnBF,MAAO,gB,+CEHIG,GCFcL,IAAUM,KAETN,IAAUM,KACNN,IAAUM,KACXN,IAAUM,KACfN,IAAUM,KACFN,IAAUM,KACVN,IAAUM,KAERN,IAAUM,KACfN,IAAUM,K,MDRzC,4MACEC,MAAQ,CACNL,MAAO,IAFX,EAKEM,SAAW,YAAiB,IACpBN,EADmB,EAAbO,OACSC,MAAMC,MAAM,EAAG,IAEpC,EAAKC,SAAS,CACZV,WATN,EAaEW,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAEhBC,EAAY,EAAKC,MAAjBD,QAER,EAAKJ,UAAS,SAACL,GACb,MAA2B,KAAvBA,EAAML,MAAMgB,OACP,IAGTF,EAAQ,CACNG,IAAK,IAAIC,KACTlB,MAAOK,EAAML,MACbmB,WAAW,EACXC,YAAY,IAGP,CACLpB,MAAO,SA9Bf,EAmCEqB,OAAS,WAAO,IACNrB,EAAU,EAAKK,MAAfL,MAER,OACE,4BAAQC,UAAU,UAEhB,0BAAMqB,SAAU,EAAKX,cACnB,2BACEV,UAAU,WACVsB,YAAY,oBACZC,KAAK,OACLC,SAAU,EAAKnB,SACfoB,OAAQ,EAAKf,aACbH,MAAOR,OAhDnB,YAA4B2B,c,gBEEfC,GCJW9B,IAAU+B,MAAM,CACtCZ,GAAInB,IAAUgC,OACdX,UAAWrB,IAAUiC,KACrBX,WAAYtB,IAAUiC,KACtB/B,MAAOF,IAAUC,S,MDAnB,4MACEM,MAAQ,CAAE2B,UAAW,IADvB,EAGEC,aAAe,YAAiB,IAAd1B,EAAa,EAAbA,OAChB,EAAKG,SAAS,CACZsB,UAAWzB,EAAOC,SALxB,EASEa,OAAS,WAAO,IAAD,EAQT,EAAKN,MANPmB,EAFW,EAEXA,KACAC,EAHW,EAGXA,SACAC,EAJW,EAIXA,SACAC,EALW,EAKXA,OACAC,EANW,EAMXA,eACAC,EAPW,EAOXA,eAEMP,EAAc,EAAK3B,MAAnB2B,UAER,OACE,wBAAI/B,UAAWuC,IAAG,YAAa,CAC7BrB,UAAWe,EAAKf,UAChBsB,QAASP,EAAKd,cAGd,yBAAKnB,UAAU,QACb,2BACEuB,KAAK,WACLvB,UAAU,SACVwB,SAAUU,EACVO,QAASR,EAAKf,YAGhB,2BACElB,UAAWuC,IAAG,aAAc,CAAEE,QAASR,EAAKf,YAC5CwB,QAAO,eAAUT,EAAKjB,IACtB2B,cAAeP,GAEdH,EAAKlC,OAGR,4BACEwB,KAAK,SACLvB,UAAU,UACV4C,QAAST,KAIZF,EAAKd,YACJ,2BACEI,KAAK,OACLvB,UAAU,OACV6C,aAAcZ,EAAKlC,MACnB+C,WAAS,EACTtB,SAAU,EAAKQ,aACfe,UAAW,SAAApC,GAAK,OAAI0B,EAAe1B,EAAOsB,EAAKjB,GAAIe,IACnDN,OAAQ,SAAAd,GAAK,OAAI2B,EAAe3B,EAAOsB,EAAKjB,GAAIe,QAzD5D,YAA8BL,cEDjBsB,G,MAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAf,EAFsB,EAEtBA,SACAC,EAHsB,EAGtBA,SACAC,EAJsB,EAItBA,OACAC,EALsB,EAKtBA,eACAC,EANsB,EAMtBA,eANsB,OAQtB,wBAAItC,UAAU,aACXiD,EAAaC,KAAI,SAAAjB,GAAI,OACpB,kBAAC,EAAD,eACEkB,IAAKlB,EAAKjB,IACN,CAAEiB,QAFR,CAGEC,SAAU,kBAAMA,EAASD,EAAKjB,KAC9BmB,SAAU,kBAAMA,EAASF,EAAKjB,KAC9BoB,OAAQ,kBAAMA,EAAOH,EAAKjB,KAC1BqB,eAAgBA,EAChBC,eAAgBA,WChBXc,G,MAAO,SAAC,GASd,IARLC,EAQI,EARJA,MACAJ,EAOI,EAPJA,aACAK,EAMI,EANJA,sBACAC,EAKI,EALJA,oBACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,kBACApB,EAEI,EAFJA,eACAC,EACI,EADJA,eAEMoB,EAAiBL,EAAMM,OAAM,SAAA1B,GAAI,OAAIA,EAAKf,aAEhD,OACE,6BAASlB,UAAU,QACjB,2BACEA,UAAWuC,IAAG,QAAS,CAAE,oBAAqBmB,IAC9ChB,QAAQ,cAER,2BACEnB,KAAK,WACLP,GAAG,aACHhB,UAAU,aACVwB,SAAUgC,EACVf,QAASiB,IATb,wBAcA,kBAAC,EAAD,cACM,CAAET,gBADR,CAEEf,SAAUoB,EACVnB,SAAUoB,EACVnB,OAAQqB,EACRpB,eAAgBA,EAChBC,eAAgBA,QCxCXsB,GCMI/D,IAAUC,OCFTD,IAAUC,OFJA,CAC1B+D,IAAK,MACLC,OAAQ,SACR5C,UAAW,cGGA6C,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAhB,OACxB,wBAAIjE,UAAU,WACXkE,OAAOC,OAAOP,GAAcV,KAAI,SAAAkB,GAAM,OACrC,wBAAIjB,IAAKiB,EAAQpE,UAAU,UACzB,uBACEqE,KAAI,YAAOD,GACXpE,UAAWuC,IAAG,cAAe,CAC3B+B,SAAUL,IAAmBG,IAE/BxB,QAAS,kBAAMoB,EAAYI,KAE1BA,UCZEG,G,MAAS,SAAC,GAEjB,IADFC,EACC,EADDA,cAAenB,EACd,EADcA,MAAOoB,EACrB,EADqBA,iBAAkBT,EACvC,EADuCA,YAEpCU,EAAiBrB,EAAMe,QAAO,SAAAnC,GAAI,OAAKA,EAAKf,aAAWyD,OAE7D,OACE,4BAAQ3E,UAAU,UAChB,0BAAMA,UAAU,cAAhB,UACM0E,EADN,gBAIA,kBAAC,EAAD,CACEV,YAAaA,EACbC,eAAgBO,IAGjBnB,EAAMuB,MAAK,SAAA3C,GAAI,OAAIA,EAAKf,cACvB,4BACEK,KAAK,SACLvB,UAAU,kBACV4C,QAAS6B,GAHX,sBCfKI,G,MAAb,4MACEzE,MAAQ,CACNiD,MAAOyB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GACpDhB,eAAgBL,EAAaC,KAHjC,EAUEhD,QAAU,SAAAoB,GAAI,OAAI,EAAKxB,UAAS,SAAAL,GAAK,MAAK,CACxCiD,MAAM,GAAD,mBAAMjD,EAAMiD,OAAZ,CAAmBpB,SAX5B,EAcEiD,WAAa,SAAAC,GAAM,OAAI,EAAK1E,UAAS,SAAAL,GAAK,MAAK,CAC7CiD,MAAOjD,EAAMiD,MAAMe,QAAO,SAAAnC,GAAI,OAAIA,EAAKjB,KAAOmE,UAflD,EAkBEC,qBAAuB,kBAAM,EAAK3E,UAAS,SAAAL,GAAK,MAAK,CACnDiD,MAAOjD,EAAMiD,MAAMe,QAAO,SAAAnC,GAAI,OAAKA,EAAKf,kBAnB5C,EAsBEmE,oBAAsB,SAACF,GACrB,EAAK1E,UAAS,SAAAL,GAAK,MAAK,CACtBiD,MAAOjD,EAAMiD,MAAMH,KAAI,SAACjB,GACtB,OAAIA,EAAKjB,KAAOmE,EACPlD,EAGF,2BACFA,GADL,IAEEf,WAAYe,EAAKf,oBA/B3B,EAqCEoE,mBAAqB,WACnB,EAAK7E,UAAS,SAACL,GACb,OAAIA,EAAMiD,MAAMM,OAAM,SAAA1B,GAAI,OAAIA,EAAKf,aAC1B,CACLmC,MAAOjD,EAAMiD,MAAMH,KAAI,SAAAjB,GAAI,kCACtBA,GADsB,IAEzBf,WAAW,QAKV,CACLmC,MAAOjD,EAAMiD,MAAMH,KAAI,SAAAjB,GAAI,kCACtBA,GADsB,IAEzBf,WAAW,YAnDrB,EAyDEqE,UAAY,SAAAnB,GAAM,OAAI,EAAK3D,SAAS,CAAEwD,eAAgBG,KAzDxD,EA2DEoB,YAAc,WAAO,IAAD,EACgB,EAAKpF,MAA/B6D,EADU,EACVA,eAAgBZ,EADN,EACMA,MAExB,OAAQY,GACN,KAAKL,EAAaE,OAChB,OAAOT,EAAMe,QAAO,SAAAnC,GAAI,OAAKA,EAAKf,aACpC,KAAK0C,EAAa1C,UAChB,OAAOmC,EAAMe,QAAO,SAAAnC,GAAI,OAAIA,EAAKf,aACnC,KAAK0C,EAAaC,IAChB,OAAOR,EAAMe,QAAO,SAAAnC,GAAI,OAAIA,EAAKjB,MACnC,QACE,OAAOqC,IAtEf,EA0EEoC,iBAAmB,SAACzE,GAClB,EAAKP,UAAS,SAAAL,GAAK,MAAK,CACtBiD,MAAOjD,EAAMiD,MAAMH,KAAI,SAACjB,GACtB,OAAIA,EAAKjB,KAAOA,EACP,2BACFiB,GADL,IAEEd,YAAY,IAIT,2BACFc,GADL,IAEEd,YAAY,YAtFtB,EA4FEkB,eAAiB,SAAC1B,EAAOK,EAAIT,GACT,WAAdI,EAAMwC,KACR,EAAK1C,UAAS,SAAAiF,GAAS,MAAK,CAC1BrC,MAAOqC,EAAUrC,MAAMH,KAAI,SAAAjB,GAAI,kCAC1BA,GAD0B,IAE7Bd,YAAY,WAKA,UAAdR,EAAMwC,KACR,EAAKb,eAAe3B,EAAOK,EAAIT,IAvGrC,EA2GE+B,eAAiB,SAAC3B,EAAOK,EAAIT,GACtBI,EAAML,OAAOC,OAChB,EAAK2E,WAAWlE,GAGlB,EAAKP,UAAS,SAAAiF,GAAS,MAAK,CAC1BrC,MAAOqC,EAAUrC,MAAMH,KAAI,SAACjB,GAC1B,OAAIA,EAAKjB,KAAOA,EACPiB,EAGF,2BACFA,GADL,IAEElC,MAAOQ,GAAS0B,EAAKlC,MACrBoB,YAAY,YAzHtB,EA+HEC,OAAS,WAAO,IAAD,EACqB,EAAKhB,MAA/BiD,EADK,EACLA,MAAOY,EADF,EACEA,eACThB,EAAe,EAAKuC,cAE1B,OACE,6BAASxF,UAAU,WACjB,kBAAC,EAAD,CACEa,QAAS,EAAKA,UAGfwC,EAAMsB,OAAS,GACd,oCACE,kBAAC,EAAD,cACM,CAAEtB,SADR,CAEEJ,aAAcA,EACdO,qBAAsB,EAAK8B,mBAC3BhC,sBAAuB,EAAK+B,oBAC5B9B,oBAAqB,EAAK2B,WAC1BzB,kBAAmB,EAAKgC,iBACxBpD,eAAgB,EAAKA,eACrBC,eAAgB,EAAKA,kBAGvB,kBAAC,EAAD,cACM,CAAEe,SADR,CAEEW,YAAa,EAAKuB,UAClBf,cAAeP,EACfQ,iBAAkB,EAAKW,2BA1JrC,mEAOIJ,aAAaW,QAAQ,QAASb,KAAKc,UAAUC,KAAKzF,MAAMiD,YAP5D,GAAmC3B,cCMpBoE,MATf,WACE,OACE,6BAAS9F,UAAU,WACjB,kBAAC,EAAD,CAAOD,MAAM,aACb,kBAAC,EAAD,QCFNgG,IAAS3E,OACP,kBAAC,EAAD,MACA4E,SAASC,eAAe,W","file":"static/js/main.b8b82535.chunk.js","sourcesContent":["import React from 'react';\nimport { titleType } from '../../typedefs/titleType';\nimport './Title.scss';\n\nexport const Title = ({ title }) => <h1 className=\"title\">{title}</h1>;\n\nTitle.defaultProps = {\n  title: 'Simple title',\n};\n\nTitle.propTypes = titleType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const titleType = PropTypes.string;\n","import React, { Component } from 'react';\nimport { headerType } from '../../typedefs/headerType';\nimport './Header.scss';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n  };\n\n  setTitle = ({ target }) => {\n    const title = target.value.slice(0, 30);\n\n    this.setState({\n      title,\n    });\n  };\n\n  validateForm = (event) => {\n    event.preventDefault();\n    const { addTodo } = this.props;\n\n    this.setState((state) => {\n      if (state.title.trim() === '') {\n        return '';\n      }\n\n      addTodo({\n        id: +new Date(),\n        title: state.title,\n        completed: false,\n        isEditable: false,\n      });\n\n      return {\n        title: '',\n      };\n    });\n  };\n\n  render = () => {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n\n        <form onSubmit={this.validateForm}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"Click to add task\"\n            type=\"text\"\n            onChange={this.setTitle}\n            onBlur={this.validateForm}\n            value={title}\n          />\n        </form>\n      </header>\n    );\n  };\n}\n\nHeader.propTypes = headerType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const addTodoType = PropTypes.func;\n\nexport const onDeleteType = PropTypes.func;\nexport const onToggleTodoType = PropTypes.func;\nexport const onToggleAllType = PropTypes.func;\nexport const onEditType = PropTypes.func;\nexport const handleKeyPressType = PropTypes.func;\nexport const setEditedValueType = PropTypes.func;\n\nexport const onClearCompletedType = PropTypes.func;\nexport const onSetFilterType = PropTypes.func;\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport { todoItemType } from '../../typedefs/todoItemType';\nimport './ToDoItem.scss';\n\n/* eslint-disable jsx-a11y/no-autofocus */\nexport class ToDoItem extends Component {\n  state = { editValue: '' }\n\n  setEditValue = ({ target }) => {\n    this.setState({\n      editValue: target.value,\n    });\n  }\n\n  render = () => {\n    const {\n      todo,\n      onToggle,\n      onDelete,\n      onEdit,\n      handleKeyPress,\n      setEditedValue,\n    } = this.props;\n    const { editValue } = this.state;\n\n    return (\n      <li className={cn('todo-item', {\n        completed: todo.completed,\n        editing: todo.isEditable,\n      })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={onToggle}\n            checked={todo.completed}\n          />\n\n          <label\n            className={cn('todo-label', { checked: todo.completed })}\n            htmlFor={`todo-${todo.id}`}\n            onDoubleClick={onEdit}\n          >\n            {todo.title}\n          </label>\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={onDelete}\n          />\n        </div>\n\n        {todo.isEditable && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            defaultValue={todo.title}\n            autoFocus\n            onChange={this.setEditValue}\n            onKeyDown={event => handleKeyPress(event, todo.id, editValue)}\n            onBlur={event => setEditedValue(event, todo.id, editValue)}\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nToDoItem.propTypes = todoItemType.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const todoType = PropTypes.shape({\n  id: PropTypes.number,\n  completed: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  title: PropTypes.string,\n});\n","import React from 'react';\nimport { todoListType } from '../../typedefs/todoListType';\nimport { ToDoItem } from '../ToDoItem';\nimport './ToDoList.scss';\n\nexport const ToDoList = ({\n  visibleTodos,\n  onToggle,\n  onDelete,\n  onEdit,\n  handleKeyPress,\n  setEditedValue,\n}) => (\n  <ul className=\"todo-list\">\n    {visibleTodos.map(todo => (\n      <ToDoItem\n        key={todo.id}\n        {...{ todo }}\n        onToggle={() => onToggle(todo.id)}\n        onDelete={() => onDelete(todo.id)}\n        onEdit={() => onEdit(todo.id)}\n        handleKeyPress={handleKeyPress}\n        setEditedValue={setEditedValue}\n      />\n    ))}\n  </ul>\n);\n\nToDoList.propTypes = todoListType.isRequired;\n","import React from 'react';\nimport cn from 'classnames';\nimport { mainType } from '../../typedefs/mainType';\nimport { ToDoList } from '../ToDoList';\nimport './Main.scss';\n\nexport const Main = ({\n  todos,\n  visibleTodos,\n  onToggleTodoCompleted,\n  onDeleteCurrentTodo,\n  onToggleAllCompleted,\n  onEditCurrentTodo,\n  handleKeyPress,\n  setEditedValue,\n}) => {\n  const isAllCompleted = todos.every(todo => todo.completed);\n\n  return (\n    <section className=\"main\">\n      <label\n        className={cn('label', { 'label-checked-all': isAllCompleted })}\n        htmlFor=\"toggle-all\"\n      >\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          onChange={onToggleAllCompleted}\n          checked={isAllCompleted}\n        />\n        Mark all as complete\n      </label>\n\n      <ToDoList\n        {...{ visibleTodos }}\n        onToggle={onToggleTodoCompleted}\n        onDelete={onDeleteCurrentTodo}\n        onEdit={onEditCurrentTodo}\n        handleKeyPress={handleKeyPress}\n        setEditedValue={setEditedValue}\n      />\n    </section>\n  );\n};\n\nMain.propTypes = mainType.isRequired;\n","export const FILTER_TYPES = {\n  all: 'All',\n  active: 'Active',\n  completed: 'Completed',\n};\n","import PropTypes from 'prop-types';\nimport { todoType } from './todoType';\nimport { onClearCompletedType, onSetFilterType } from './methodsType';\n\nexport const footerType = {\n  todos: todoType,\n  currentFilter: PropTypes.string,\n  onClearCompleted: onClearCompletedType,\n  onSetFilter: onSetFilterType,\n};\n","import PropTypes from 'prop-types';\nimport { onSetFilterType } from './methodsType';\n\nexport const filterListType = {\n  selectedFilter: PropTypes.string,\n  onSetFilter: onSetFilterType,\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { filterListType } from '../../typedefs/filterListType';\nimport { FILTER_TYPES } from '../../constants';\nimport './FilterList.scss';\n\nexport const FilterList = ({ onSetFilter, selectedFilter }) => (\n  <ul className=\"filters\">\n    {Object.values(FILTER_TYPES).map(filter => (\n      <li key={filter} className=\"filter\">\n        <a\n          href={`#/${filter}`}\n          className={cn('filter-link', {\n            selected: selectedFilter === filter,\n          })}\n          onClick={() => onSetFilter(filter)}\n        >\n          {filter}\n        </a>\n      </li>\n    ))}\n  </ul>\n);\n\nFilterList.propTypes = filterListType.isRequired;\n","import React from 'react';\nimport { footerType } from '../../typedefs/footerType';\nimport { FilterList } from '../FilterList';\nimport './Footer.scss';\n\nexport const Footer = (\n  { currentFilter, todos, onClearCompleted, onSetFilter },\n) => {\n  const completedTodos = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${completedTodos} items left`}\n      </span>\n\n      <FilterList\n        onSetFilter={onSetFilter}\n        selectedFilter={currentFilter}\n      />\n\n      {todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = footerType.isRequired;\n","import React, { Component } from 'react';\nimport { Header } from '../../components/Header';\nimport { Main } from '../../components/Main';\nimport { Footer } from '../../components/Footer';\nimport { FILTER_TYPES } from '../../constants';\nimport './ToDoContainer.scss';\n\nexport class ToDoContainer extends Component {\n  state = {\n    todos: JSON.parse(localStorage.getItem('todos')) || [],\n    selectedFilter: FILTER_TYPES.all,\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  }\n\n  addTodo = todo => this.setState(state => ({\n    todos: [...state.todos, todo],\n  }));\n\n  deleteTodo = todoId => this.setState(state => ({\n    todos: state.todos.filter(todo => todo.id !== todoId),\n  }));\n\n  handleClearCompleted = () => this.setState(state => ({\n    todos: state.todos.filter(todo => !todo.completed),\n  }));\n\n  toggleTodoCompleted = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  toggleAllCompleted = () => {\n    this.setState((state) => {\n      if (state.todos.every(todo => todo.completed)) {\n        return {\n          todos: state.todos.map(todo => ({\n            ...todo,\n            completed: false,\n          })),\n        };\n      }\n\n      return {\n        todos: state.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        })),\n      };\n    });\n  };\n\n  setFilter = filter => this.setState({ selectedFilter: filter });\n\n  filterTodos = () => {\n    const { selectedFilter, todos } = this.state;\n\n    switch (selectedFilter) {\n      case FILTER_TYPES.active:\n        return todos.filter(todo => !todo.completed);\n      case FILTER_TYPES.completed:\n        return todos.filter(todo => todo.completed);\n      case FILTER_TYPES.all:\n        return todos.filter(todo => todo.id);\n      default:\n        return todos;\n    }\n  };\n\n  setEditableState = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== id) {\n          return {\n            ...todo,\n            isEditable: false,\n          };\n        }\n\n        return {\n          ...todo,\n          isEditable: true,\n        };\n      }),\n    }));\n  };\n\n  handleKeyPress = (event, id, value) => {\n    if (event.key === 'Escape') {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => ({\n          ...todo,\n          isEditable: false,\n        })),\n      }));\n    }\n\n    if (event.key === 'Enter') {\n      this.setEditedValue(event, id, value);\n    }\n  }\n\n  setEditedValue = (event, id, value) => {\n    if (!event.target.value) {\n      this.deleteTodo(id);\n    }\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          title: value || todo.title,\n          isEditable: false,\n        };\n      }),\n    }));\n  };\n\n  render = () => {\n    const { todos, selectedFilter } = this.state;\n    const visibleTodos = this.filterTodos();\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          addTodo={this.addTodo}\n        />\n\n        {todos.length > 0 && (\n          <>\n            <Main\n              {...{ todos }}\n              visibleTodos={visibleTodos}\n              onToggleAllCompleted={this.toggleAllCompleted}\n              onToggleTodoCompleted={this.toggleTodoCompleted}\n              onDeleteCurrentTodo={this.deleteTodo}\n              onEditCurrentTodo={this.setEditableState}\n              handleKeyPress={this.handleKeyPress}\n              setEditedValue={this.setEditedValue}\n            />\n\n            <Footer\n              {...{ todos }}\n              onSetFilter={this.setFilter}\n              currentFilter={selectedFilter}\n              onClearCompleted={this.handleClearCompleted}\n            />\n          </>\n        )}\n\n      </section>\n    );\n  };\n}\n","import React from 'react';\nimport { Title } from './components/Title';\nimport { ToDoContainer } from './containers/ToDoContainer';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <Title title=\"Todo App\" />\n      <ToDoContainer />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}